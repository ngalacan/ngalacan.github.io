
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    [{"authors":null,"categories":null,"content":"Николай Галацан - студент I курса, факультет Физико-математических и естественных наук РУДН. Обучается на направлении “Прикладная информатика”.\n","date":1680998400,"expirydate":-62135596800,"kind":"term","lang":"en","lastmod":1680998400,"objectID":"2525497d367e79493fd32b198b28f040","permalink":"","publishdate":"0001-01-01T00:00:00Z","relpermalink":"","section":"authors","summary":"Николай Галацан - студент I курса, факультет Физико-математических и естественных наук РУДН. Обучается на направлении “Прикладная информатика”.","tags":null,"title":"Николай Галацан","type":"authors"},{"authors":[],"categories":null,"content":" Click on the Slides button above to view the built-in slides feature. Slides can be added in a few ways:\nCreate slides using Wowchemy’s Slides feature and link using slides parameter in the front matter of the talk file Upload an existing slide deck to static/ and link using url_slides parameter in the front matter of the talk file Embed your slides (e.g. Google Slides) or presentation video on this page using shortcodes. Further event details, including page elements such as image galleries, can be added to the body of this page.\n","date":1906549200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1906549200,"objectID":"a8edef490afe42206247b6ac05657af0","permalink":"https://example.com/talk/example-talk/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/talk/example-talk/","section":"event","summary":"An example talk using Wowchemy's Markdown slides feature.","tags":[],"title":"Example Talk","type":"event"},{"authors":null,"categories":null,"content":"","date":1680998400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1680998400,"objectID":"f606ebe0a35f8966c57e4a32fcb9513e","permalink":"https://example.com/project/github-project/","publishdate":"2023-04-09T00:00:00Z","relpermalink":"/project/github-project/","section":"project","summary":"Проекты, размещенные в репозитории Github","tags":["other"],"title":"Github","type":"project"},{"authors":null,"categories":null,"content":"Этапы реализации проекта: 1. Размещение на Github pages заготовки для персонального сайта.\nУстановить необходимое программное обеспечение. Скачать шаблон темы сайта. Разместить его на хостинге git. Установить параметр для URLs сайта. Разместить заготовку сайта на Github pages. 2. Добавить к сайту данные о себе.\nСписок добавляемых данных. Разместить фотографию владельца сайта. Разместить краткое описание владельца сайта (Biography). Добавить информацию об интересах (Interests). Добавить информацию от образовании (Education). Сделать пост по прошедшей неделе. Добавить пост на тему по выбору: Управление версиями. Git. Непрерывная интеграция и непрерывное развертывание (CI/CD). 3. Добавить к сайту достижения\nСписок достижений. Добавить информацию о навыках (Skills). Добавить информацию об опыте (Experience). Добавить информацию о достижениях (Accomplishments). Сделать пост по прошедшей неделе. Добавить пост на тему по выбору: Легковесные языки разметки. Языки разметки. LaTeX. Язык разметки Markdown. 4. Добавить к сайту ссылки на научные и библиометрические ресурсы.\nРазместить ссылки на ресурсы Сделать пост по прошедшей неделе. Добавить пост на тему по выбору: Оформление отчёта. Создание презентаций. Работа с библиографией. 5. Добавить с сайту все остальные элементы.\nСделать записи для персональных проектов. Сделать пост по прошедшей неделе. Добавить пост на тему по выбору. Языки научного программирования. 6. Размещение двуязычного сайта на Github.\nСделать поддержку английского и русского языков. Разместить элементы сайта на обоих языках. Разместить контент на обоих языках. Сделать пост по прошедшей неделе. Добавить пост на тему по выбору (на двух языках). Техническая реализация проекта Для реализации сайта используется генератор статических сайтов Hugo.\nОбщие файлы для тем Wowchemy:\nРепозиторий: https://github.com/wowchemy/wowchemy-hugo-themes В качестве шаблона индивидуального сайта используется шаблон Hugo Academic Theme.\nДемо-сайт: https://academic-demo.netlify.app/ Репозиторий: https://github.com/wowchemy/starter-hugo-academic Индивидуальный сайт Доступен по ссылке https://ngalacan.github.io\n","date":1680998400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1680998400,"objectID":"cb6d1c7b85f33e1a00c2af8888cd1726","permalink":"https://example.com/project/personal-project-site/","publishdate":"2023-04-09T00:00:00Z","relpermalink":"/project/personal-project-site/","section":"project","summary":"Персональный сайт научного работника","tags":["education"],"title":"Индивидуальный проект","type":"project"},{"authors":["Николай Галацан"],"categories":[],"content":"Структура отчета Согласно ГОСТ 7.32-2001, любая научно-исследовательская работа должна обязательно содержать следующие элементы:\nтитульный лист; реферат; введение; основную часть; заключение. Также ГОСТ рекомендует включить в работу и такие элементы: список исполнителей; содержание; нормативные ссылки; определения; обозначения и сокращения; список использованных источников; приложения. Содержание основных элементов отчета Титульный лист Первый лист работы оформляется строго по образцу, который обычно приводится в методических пособиях по вашему предмету. В нем не просто требуется указать такие элементы, как название образовательного учреждения, вид работы и сведения об исполнителе, но и расположить их в строгом соответствии со стандарта- ми.\nРеферат Реферат фактически является кратким представлением всего вашего отчета и содержит ряд статистических сведений. В нем нужно указать количество частей, страниц работы, иллюстраций, приложений, таблиц, использованных литературных источников и приложений. Здесь же приводится перечень ключевых слов работы и собственно текст реферата. Последний подразумевает основные элементы работы от поставленных целей до результатов и рекомендаций по их внедрению. В практике вузов в отчеты по лабораторным работам реферат обычно не включают.\nВведение Во введении типовой лабораторной работы обычно прописывают цели проводимого исследования и задачи, выполнение которых поможет достичь постав- ленных целей. Пишется развернутое введение с доказательством актуальности и новизны изучаемой темы. Чтобы действительно провести исследование в той области, в которой, как говорится, еще не ступала нога человека, во введении вам понадобится привести оценку современного состояния рассматриваемой проблемы и обосновать необходимость ее решения.\nОсновная часть Основная часть. Так как в разных вузах и в разных дисциплинах существуют свои тонкости проведения лабораторных работ, содержание основной части подробно описывают в соответствующих методичках. Важно, чтобы в этом разделе работы была отражена ее суть, описана методика и результаты проделанной работы. В основной части прописывают следующие элементы:\nцели проводимого исследования; задачи, выполнение которых поможет достичь поставленных целей; ход работы, в котором описываются выполненные действия; прочие разделы, предусмотренные методическими материалами по изучаемой дисциплине. Заключение В этой части работы вам потребуется сделать выводы по полученным в ходе лабораторной работы результатам. Для этого оцените, насколько полно выполнены поставленные задачи. В сложных работах могут присутствовать и другие элементы, например, рекомендации для дальнейшего применения результатов проведённой работы.\n","date":1680998400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1680998400,"objectID":"ab5c4ffe08e436ac746da88ee2d1e78f","permalink":"https://example.com/post/report_making/","publishdate":"2023-04-09T00:00:00Z","relpermalink":"/post/report_making/","section":"post","summary":"Структура отчета Согласно ГОСТ 7.32-2001, любая научно-исследовательская работа должна обязательно содержать следующие элементы:\nтитульный лист; реферат; введение; основную часть; заключение. Также ГОСТ рекомендует включить в работу и такие элементы: список исполнителей; содержание; нормативные ссылки; определения; обозначения и сокращения; список использованных источников; приложения.","tags":[],"title":"Оформление отчетов","type":"post"},{"authors":["Николай Галацан"],"categories":[],"content":"Как прошла очередная неделя? На прошедшей неделе были сделаны и сданы задания и лабораторные работы. Я виделся с друзьями, отдыхал.\n","date":1680998400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1680998400,"objectID":"39a351791719f471f59d283bbb99da7d","permalink":"https://example.com/post/week4/","publishdate":"2023-04-09T00:00:00Z","relpermalink":"/post/week4/","section":"post","summary":"Как прошла очередная неделя? На прошедшей неделе были сделаны и сданы задания и лабораторные работы. Я виделся с друзьями, отдыхал.","tags":[],"title":"Очередная прошедшая неделя","type":"post"},{"authors":["Николай Галацан"],"categories":[],"content":"Как прошла очередная неделя? Неделя была похожей на все остальные. На прошедшей неделе были сделаны и сданы задания и лабораторные работы. Я виделся с друзьями, отдыхал.\n","date":1680998400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1680998400,"objectID":"13e4216eb9efdf6a7e6e58c5965bce85","permalink":"https://example.com/post/week3/","publishdate":"2023-04-09T00:00:00Z","relpermalink":"/post/week3/","section":"post","summary":"Как прошла очередная неделя? Неделя была похожей на все остальные. На прошедшей неделе были сделаны и сданы задания и лабораторные работы. Я виделся с друзьями, отдыхал.","tags":[],"title":"Прошедшая неделя","type":"post"},{"authors":["Николай Галацан"],"categories":[],"content":"Научное программирование Научное программирование - стиль программирования, ориентированный на научные расчеты.\nЯзыки C/C++ Эти языки часто занимают вершины различных рейтингов — их ценят за мощность и быстродействие. C был создан в начале 1970-х годов Деннисом Ритчи, C ++ в 1985 году разработал Бьёрн Страуструп. Сегодня два этих языка лежат в основе всего: от ОС и игр до современных научных вычислений и машинного обучения. C и C++ хорошо подходят для требовательных приложений, которым важны низкоуровневый доступ к оборудованию и производительность. Для освоения этих языков нужно время и определенные усилия.\nJava Java — это ООП-язык общего назначения, разработанный в 1990-х годах Джеймсом Гослингом в Sun (сейчас принадлежит Oracle) и предназначенный для компиляции в байт-код для запуска на виртуальной машине Java. К 2020 году к ним относятся практически все виды устройств — от телевизоров и игровых приставок до серверов, телефонов и даже кухонных приборов. Язык широко распространен в корпорациях и университетах, что сделало его популярным как среди начинающих программистов, так и среди опытных разработчиков.\nJulia Современный язык высокого уровня, предназначенный для высокопроизводительной числовой обработки и статистического анализа. Julia разработали в 2009 году Джефф Безансон, Стефан Карпински, Вирал Б. Шах и Алан Эдельман. Это один из четырех языков, позволяющих достигать производительности суперкомпьютеров на уровне петафлопсов (наряду с C, C ++ и Fortran). Пользуется популярностью в университетах, правительствах и финансовых учреждениях.\nPython Python, представленные в 1991 году Гвидо ван Россумом, был задуман как хорошо читаемый язык с функциями ООП, предполагающий использование функциональных парадигм для построения чистых и хорошо организованных программ. Python пользуется поддержкой крупных платформ и применяется в самых разных сферах, в том числе в науке, интеллектуальной обработке данных, разработке систем искусственного интеллекта, компьютерной графике для художественных фильмов, облачных вычислениях, разработке игр и многих других. Python хорошо зарекомендовал себя и останется одним из наиболее востребованных инструментов в течение долгого времени.\n","date":1680998400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1680998400,"objectID":"505f1926928104c1ffdf04557ad3e744","permalink":"https://example.com/post/programming/","publishdate":"2023-04-09T00:00:00Z","relpermalink":"/post/programming/","section":"post","summary":"Научное программирование Научное программирование - стиль программирования, ориентированный на научные расчеты.\nЯзыки C/C++ Эти языки часто занимают вершины различных рейтингов — их ценят за мощность и быстродействие. C был создан в начале 1970-х годов Деннисом Ритчи, C ++ в 1985 году разработал Бьёрн Страуструп.","tags":[],"title":"Языки научного программирования","type":"post"},{"authors":["Николай Галацан"],"categories":[],"content":"Как прошла еще одна неделя? На прошедшей неделе были сделаны и сданы задания и лабораторные работы. Я ходил на учебу, виделся с друзьями, отдыхал. Совершенно обычная и непримечательная неделя.\n","date":1679702400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1679702400,"objectID":"10e7d36d1a0a7a8a2e44715d67e1f72b","permalink":"https://example.com/post/week2/","publishdate":"2023-03-25T00:00:00Z","relpermalink":"/post/week2/","section":"post","summary":"Как прошла еще одна неделя? На прошедшей неделе были сделаны и сданы задания и лабораторные работы. Я ходил на учебу, виделся с друзьями, отдыхал. Совершенно обычная и непримечательная неделя.","tags":[],"title":"Еще одна моя неделя","type":"post"},{"authors":["Николай Галацан"],"categories":[],"content":" Общие сведения Markdown — облегчённый язык разметки, созданный с целью обозначения форматирования в простом тексте, с максимальным сохранением его читаемости человеком, и пригодный для машинного преобразования в языки для продвинутых публикаций.\nИстория Первоначально создан в 2004 году Джоном Грубером и Аароном Шварцем. Многие идеи языка были позаимствованы из существующих соглашений по разметке текста в электронных письмах. Реализации языка Markdown преобразуют текст в формате Markdown в валидный, правильно построенный XHTML и заменяют левые угловые скобки («\u0026lt;») и амперсанды («\u0026amp;») на соответствующие коды сущностей. Первой реализацией Markdown стала написанная Грубером реализация на Perl, однако спустя некоторое время появилось множество реализаций от сторонних разработчиков. Реализация на Perl распространяется по лицензии типа BSD. Реализации Markdown на различных языках программирования включены (или доступны в качестве плагина) во многие системы управления содержимым.\nСинтаксис Форматирование текста Чтобы создать заголовок, используйте знак #, например:\n# This is heading 1 ## This is heading 2 ### This is heading 3 #### This is heading 4 Чтобы задать для текста полужирное начертание, заключите его в двойные звездочки:\nThis text is **bold**. Чтобы задать для текста курсивное начертание, заключите его в одинарные звездочки:\nThis text is *italic* Чтобы задать для текста полужирное и курсивное начертание, заключите его в тройные звездочки:\nThis is text is both ***bold and italic***. Блоки цитирования создаются с помощью символа \u0026gt;:\n\u0026gt; The drought had lasted now for ten million years, and the reign of the terrible lizards had long since ended. Here on the Equator, in the continent which would one day be known as Africa, the battle for existence had reached a new climax of ferocity, and the victor was not yet in sight. In this barren and desiccated land, only the small or the swift or the fierce could flourish, or even hope to survive. Упорядоченный список можно отформатировать с помощью соответствующих цифр:\n1. First instruction 1. Sub-instruction 1. Sub-instruction 1. Second instruction Упорядоченный (маркированный) список можно отформатировать с помощью звездочек или тире:\n* List item 1 * List item 2 * List item 3 Оформление изображений В Markdown вставить изображение в документ можно с помощью непосредственного указания адреса изображения. Синтаксис данной команды выглядит следующим образом:\n![Подпись к рисунку](/путь/к/изображению.jpg \u0026#34;Необязательная подсказка\u0026#34;){ #fig:fig1 width=70% }\nЗдесь:\nв квадратных скобках указывается подпись к изображению; в круглых скобках указывается URL-адрес или относительный путь изображения, а также (необязательно) всплывающую подсказку, заключённую в двойные или одиночные кавычки. в фигурных скобках указывается идентификатор изображения (#fig:fig1) для ссылки на него по тексту и размер изображения относительно ширины страницы (width=90%) Ссылка на изображение оформляется следующим образом: (рис. [-@fig:fig1])\n","date":1679702400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1679702400,"objectID":"bd238f54b82fdcd586f8f7e438599565","permalink":"https://example.com/post/markdown/","publishdate":"2023-03-25T00:00:00Z","relpermalink":"/post/markdown/","section":"post","summary":"Общие сведения Markdown — облегчённый язык разметки, созданный с целью обозначения форматирования в простом тексте, с максимальным сохранением его читаемости человеком, и пригодный для машинного преобразования в языки для продвинутых публикаций.","tags":[],"title":"Язык разметки Markdown","type":"post"},{"authors":["Николай Галацан"],"categories":[],"content":"Как прошла моя неделя? Эта неделя была похожей на все остальные. На прошедшей неделе я ходил в университет, выполнял задания и посвящал время учебе. Также на прошлой неделе я провел время с друзьями, гулял по городу, уделил время и себе. Неделя была продуктивной и спокойной.\n","date":1679011200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1679011200,"objectID":"bc6ade111387b12fbb819edd4e87b35f","permalink":"https://example.com/post/week1/","publishdate":"2023-03-17T00:00:00Z","relpermalink":"/post/week1/","section":"post","summary":"Как прошла моя неделя? Эта неделя была похожей на все остальные. На прошедшей неделе я ходил в университет, выполнял задания и посвящал время учебе. Также на прошлой неделе я провел время с друзьями, гулял по городу, уделил время и себе.","tags":[],"title":"Моя неделя","type":"post"},{"authors":["Николай Галацан"],"categories":[],"content":" Что такое системы контроля версий? Системы контроля версий (Version Control System, VCS) применяются при работе нескольких человек над одним проектом.\nВ классических системах контроля версий используется централизованная модель, предполагающая наличие единого репозитория для хранения файлов. Выполнение большинства функций по управлению версиями осуществляется специальным сервером. Участник проекта (пользователь) перед началом работы посредством определённых команд получает нужную ему версию файлов. После внесения изменений, пользователь размещает новую версию в хранилище. При этом предыдущие версии не удаляются из центрального хранилища и к ним можно вернуться в любой момент. Сервер может сохранять не полную версию изменённых файлов, а производить так называемую дельта-компрессию — сохранять только изменения между последовательными версиями, что позволяет уменьшить объём хранимых данных.\nСистема контроля версий Git Система контроля версий Git представляет собой набор программ командной строки. Доступ к ним можно получить из терминала посредством ввода команды git с различными опциями.\nБлагодаря тому, что Git является распределённой системой контроля версий, резервную копию локального хранилища можно сделать простым копированием или архивацией.\nСтандартные команды Git git init - создание основного дерева репозитория\ngit pull - получение обновлений (изменений) текущего дерева из центрального репозитория\ngit push - отправка всех произведённых изменений локального дерева в центральный репозиторий\ngit status - просмотр списка изменённых файлов в текущей директории\ngit add . - добавить все изменённые и/или созданные файлы и/или каталоги\ngit add имена_файлов - добавить конкретные изменённые и/или созданные файлы и/или каталоги\ngit rm имена_файлов - удалить файл и/или каталог из индекса репозитория (при этом файл и/или каталог остаётся в локальной директории)\ngit commit -am \u0026#39;Описание коммита\u0026#39;- сохранить все добавленные изменения и все изменённые файлы\n","date":1679011200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1679011200,"objectID":"4b21d5dcf3e4ccbf5460b69b359a5446","permalink":"https://example.com/post/git/","publishdate":"2023-03-17T00:00:00Z","relpermalink":"/post/git/","section":"post","summary":"Что такое системы контроля версий? Системы контроля версий (Version Control System, VCS) применяются при работе нескольких человек над одним проектом.\nВ классических системах контроля версий используется централизованная модель, предполагающая наличие единого репозитория для хранения файлов.","tags":[],"title":"Управление версиями. Git.","type":"post"},{"authors":["Николай Галацан"],"categories":null,"content":" Create your slides in Markdown - click the Slides button to check out the example. Supplementary notes can be added here, including code, math, and images.\n","date":1554595200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1554595200,"objectID":"557dc08fd4b672a0c08e0a8cf0c9ff7d","permalink":"https://example.com/publication/preprint/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/publication/preprint/","section":"publication","summary":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum.","tags":["Source Themes"],"title":"An example preprint / working paper","type":"publication"},{"authors":[],"categories":[],"content":"Create slides in Markdown with Wowchemy Wowchemy | Documentation\nFeatures Efficiently write slides in Markdown 3-in-1: Create, Present, and Publish your slides Supports speaker notes Mobile friendly slides Controls Next: Right Arrow or Space Previous: Left Arrow Start: Home Finish: End Overview: Esc Speaker notes: S Fullscreen: F Zoom: Alt + Click PDF Export Code Highlighting Inline code: variable\nCode block:\nporridge = \u0026#34;blueberry\u0026#34; if porridge == \u0026#34;blueberry\u0026#34;: print(\u0026#34;Eating...\u0026#34;) Math In-line math: $x + y = z$\nBlock math:\n$$ f\\left( x \\right) = ;\\frac{{2\\left( {x + 4} \\right)\\left( {x - 4} \\right)}}{{\\left( {x + 4} \\right)\\left( {x + 1} \\right)}} $$\nFragments Make content appear incrementally\n{{% fragment %}} One {{% /fragment %}} {{% fragment %}} **Two** {{% /fragment %}} {{% fragment %}} Three {{% /fragment %}} Press Space to play!\nOne Two Three A fragment can accept two optional parameters:\nclass: use a custom style (requires definition in custom CSS) weight: sets the order in which a fragment appears Speaker Notes Add speaker notes to your presentation\n{{% speaker_note %}} - Only the speaker can read these notes - Press `S` key to view {{% /speaker_note %}} Press the S key to view the speaker notes!\nOnly the speaker can read these notes Press S key to view Themes black: Black background, white text, blue links (default) white: White background, black text, blue links league: Gray background, white text, blue links beige: Beige background, dark text, brown links sky: Blue background, thin dark text, blue links night: Black background, thick white text, orange links serif: Cappuccino background, gray text, brown links simple: White background, black text, blue links solarized: Cream-colored background, dark green text, blue links Custom Slide Customize the slide style and background\n{{\u0026lt; slide background-image=\u0026#34;/media/boards.jpg\u0026#34; \u0026gt;}} {{\u0026lt; slide background-color=\u0026#34;#0000FF\u0026#34; \u0026gt;}} {{\u0026lt; slide class=\u0026#34;my-style\u0026#34; \u0026gt;}} Custom CSS Example Let’s make headers navy colored.\nCreate assets/css/reveal_custom.css with:\n.reveal section h1, .reveal section h2, .reveal section h3 { color: navy; } Questions? Ask\nDocumentation\n","date":1549324800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1549324800,"objectID":"0e6de1a61aa83269ff13324f3167c1a9","permalink":"https://example.com/slides/example/","publishdate":"2019-02-05T00:00:00Z","relpermalink":"/slides/example/","section":"slides","summary":"An introduction to using Wowchemy's Slides feature.","tags":[],"title":"Slides","type":"slides"},{"authors":["Николай Галацан","Robert Ford"],"categories":null,"content":" Click the Cite button above to demo the feature to enable visitors to import publication metadata into their reference management software. Create your slides in Markdown - click the Slides button to check out the example. Supplementary notes can be added here, including code, math, and images.\n","date":1441065600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1441065600,"objectID":"966884cc0d8ac9e31fab966c4534e973","permalink":"https://example.com/publication/journal-article/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/publication/journal-article/","section":"publication","summary":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum.","tags":["Source Themes"],"title":"An example journal article","type":"publication"},{"authors":["Николай Галацан","Robert Ford"],"categories":null,"content":" Click the Cite button above to demo the feature to enable visitors to import publication metadata into their reference management software. Create your slides in Markdown - click the Slides button to check out the example. Supplementary notes can be added here, including code, math, and images.\n","date":1372636800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1372636800,"objectID":"69425fb10d4db090cfbd46854715582c","permalink":"https://example.com/publication/conference-paper/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/publication/conference-paper/","section":"publication","summary":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum.","tags":[],"title":"An example conference paper","type":"publication"}]